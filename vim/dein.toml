# git
[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
 nnoremap [fugitive]  <Nop>
 nmap <space>g [fugitive]
 nnoremap <silent> [fugitive]s :Gstatus<CR><C-w>T
 "nnoremap <silent> [fugitive]a :Gwrite<CR>
 "nnoremap <silent> [fugitive]c :Gcommit-v<CR>
 nnoremap <silent> [fugitive]b :Gblame<CR>
 nnoremap <silent> [fugitive]l :Glog<CR>
 nnoremap <silent> [fugitive]d :Gdiff<CR>
 "nnoremap <silent> [fugitive]m :Gmerge<CR>
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
depends = ['tpope/vim-fugitive']
hook_add = '''
 let g:gitgutter_highlight_lines = 0
 let g:gitgutter_show_msg_on_hunk_jumping = 0
 " Always show sign column
 set signcolumn=yes
 " By default updatetime is 4000 ms
 set updatetime=100
'''


# syntax
[[plugins]]
repo = 'cespare/vim-toml'
[[plugins]]
repo = 'octol/vim-cpp-enhanced-highlight'

# translate
[[plugins]]
repo = 'skanehira/translate.vim'

# ale
[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
 let g:ale_linters = {
       \ 'css': ['stylelint'],
       \ 'javascript': ['eslint'],
       \ 'typescript': ['eslint'],
       \ }
'''

# airline
[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
  " タブラインを表示
  let g:airline#extensions#tabline#enabled = 1
  " タブが1個でもバッファを表示しない
  let g:airline#extensions#tabline#show_buffers = 0
  " Powerline Fontsを利用
  let g:airline_powerline_fonts = 1
  " 0でそのタブで開いてるウィンドウ数、1で左のタブから連番
  let g:airline#extensions#tabline#tab_nr_type = 1
  " タブに表示する名前（fnamemodifyの第二引数）
  let g:airline#extensions#tabline#fnamemod = ':t'

  let g:airline#extensions#tabline#left_sep = ' '
  let g:airline#extensions#tabline#left_alt_sep = '|'
  let g:airline#extensions#tabline#show_tab_type = 0
  let g:airline#extensions#tabline#show_splits = 0
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'
depends = ['vim-airline/vim-airline']
hook_add = '''
  let g:airline_theme = 'angr'               " テーマの指定
'''

[[plugins]]
repo = 'ryanoasis/vim-devicons'
depends = ['vim-airline/vim-airline']

# fzf
[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'

[[plugins]]
repo = 'junegunn/fzf.vim'
merged = '0'
depends = ['junegunn/fzf']
hook_add = '''
  set rtp+=/opt/homebrew/opt/fzf

  let g:fzf_layout = { 'up': '30%' }
  " [Buffers] Jump to the existing window if possible
  let g:fzf_buffers_jump = 1
  " [[B]Commits] Customize the options used by 'git log':
  let g:fzf_commits_log_options = '--graph --color=always --format="%C(auto)%h%d %s %C(black)%C(bold)%cr"'

  let $FZF_DEFAULT_OPTS = '--reverse'

  nnoremap <Leader>r :Rg<CR>

  function! s:find_git_root()
    return system('git rev-parse --show-toplevel 2> /dev/null')[:-2]
  endfunction
  command! ProjectFiles execute 'Files' s:find_git_root()

  nnoremap <silent>fb :Buffers<CR>
  nnoremap <silent>fc :Commits<CR>
  nnoremap <silent>fh :History<CR>
  nnoremap <silent>fm :FZFMru<CR>
  ""nnoremap <silent>ff :Files<CR>
  nnoremap <silent>ff :ProjectFiles<CR>

  if executable('rg')
    function! FZGrep(query, fullscreen)
      " --hidden 隠しファイルも隠しディレクトリも含める
      " --follow シンボリックリンクも含める
      " --glob   対象ファイルのファイルパターンを指定
      let command_fmt = 'rg --column --line-number --no-heading --hidden --follow --glob "!.git/*" --color=always --smart-case -- %s || true'
      let initial_command = printf(command_fmt, shellescape(a:query))
      let reload_command = printf(command_fmt, '{q}')
      let spec = {'options': ['--phony', '--query', a:query, '--bind', 'change:reload:'.reload_command]}
      call fzf#vim#grep(initial_command, 1, fzf#vim#with_preview(spec), a:fullscreen)
    endfunction

    " RGマンドを定義。同名コマンドが定義されていた場合上書きする
    " RGコマンドはFZGrep関数を呼び出す
    command! -nargs=* -bang RG call FZGrep(<q-args>, <bang>0)
  endif
'''

[[plugins]]
repo = 'pbogut/fzf-mru.vim'
depends = ['junegunn/fzf']
hook_add = '''
 let g:fzf_mru_max = 1000
'''


[[plugins]]
repo = 'tpope/vim-markdown'
hook_add = '''
let g:markdown_fenced_languages = ['javascript', 'html', 'python', 'bash=sh']
'''


# unite
[[plugins]]
repo = 'Shougo/unite.vim'
hook_add = '''
 " insert modeで開始
 let g:unite_enable_start_insert=1
 let g:unite_source_history_yank_enable =1
 let g:unite_source_file_mru_limit = 1000
 "nnoremap <silent> fy :<C-u>Unite history/yank<CR>
 "nnoremap <silent> fb :<C-u>Unite buffer<CR>
 " nnoremap <silent> ff :<C-u>UniteWithBufferDir -buffer-name=files file<CR>
 nnoremap <silent> fr :<C-u>Unite -buffer-name=register register<CR>
 "nnoremap <silent> fm :<C-u>Unite file_mru buffer<CR>
'''

[[plugins]]
repo = 'Shougo/unite-outline'
depends = ['Shougo/unite.vim']
hook_add = '''
 nnoremap <silent> tr :<C-u>Unite -no-quit -vertical -winwidth=35 outline<CR>
'''

# resize
[[plugins]]
repo = 'simeji/winresizer'
hook_add = '''
 let g:winresizer_vert_resize=1
 let g:winresizer_horiz_resize=1
 let g:winresizer_start_key='<C-t>'
'''

# LSP
[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
 let g:lsp_diagnostics_enabled = 1
 let g:lsp_diagnostics_echo_cursor = 1
 let g:lsp_diagnostics_echo_delay = 200
 let g:lsp_text_edit_enabled = 0
'''

[[plugins]]
repo = 'prabirshrestha/async.vim'
depends = ['prabirshrestha/vim-lsp']

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'
depends = ['prabirshrestha/vim-lsp']
hook_add = '''
 let g:asyncomplete_auto_popup = 1
 let g:asyncomplete_auto_completeopt = 0
 let g:asyncomplete_popup_delay = 200
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'
depends = ['prabirshrestha/vim-lsp']

[[plugins]]
repo = 'mattn/vim-lsp-settings'
depends = ['prabirshrestha/vim-lsp']

[[plugins]]
repo = 'thomasfaingnaert/vim-lsp-snippets'
depends = ['prabirshrestha/vim-lsp']

[[plugins]]
repo = 'thomasfaingnaert/vim-lsp-ultisnips'
depends = ['prabirshrestha/vim-lsp']

[[plugins]]
repo = 'honza/vim-snippets'
[[plugins]]
repo = 'SirVer/ultisnips'
hook_add = '''
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-n>"
let g:UltiSnipsJumpBackwardTrigger="<c-p>"
'''
[[plugins]]
repo = 'pangloss/vim-javascript'
hook_add = '''
  let g:javascript_plusgin_jsdoc = 1
  augroup javascript_folding
    au!
    au FileType javascript setlocal foldmethod=syntax
  augroup END
'''

# cursor
[[plugins]]
repo = 'easymotion/vim-easymotion'

# comment
[[plugins]]
repo = 'scrooloose/nerdcommenter'
hook_add = '''
 let g:NERDCreateDefaultMappings = 0
 let NERDSpaceDelims = 1
 nmap <space>/ <plug>NERDCommenterToggle
 vmap <space>/ <plug>NERDCommenterToggle
'''

# emmet
[[plugins]]
repo = 'mattn/emmet-vim'
hook_add = '''
 let g:user_emmet_mode='n'    "only enable normal mode functions.
 let g:user_emmet_install_global = 1
'''

# csv
[[plugins]]
repo = 'mechatroner/rainbow_csv'
on_ft = ['csv']